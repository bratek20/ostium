// DO NOT EDIT! Autogenerated by HLA tool

using System;
using System.Collections.Generic;
using B20.Ext;
using HttpClient.Api;
using GameSetup.Api;
using GameComponents.Api;
using HttpClientModule.Api;

namespace GameSetup.Web {
    public class GameSetupWebClientConfig {
        public HttpClientConfig Value { get; }

        public GameSetupWebClientConfig(
            HttpClientConfig value
        ) {
            Value = value;
        }
    }

    public class GameSetupApiStartGameResponse {
        public Game Value { get; }

        public GameSetupApiStartGameResponse(
            Game value
        ) {
            Value = value;
        }
    }

    public class GameSetupApiPlayCardRequest {
        readonly string cardId;
        readonly string row;

        public GameSetupApiPlayCardRequest(
            string cardId,
            string row
        ) {
            this.cardId = cardId;
            this.row = row;
        }
        public CreatureCardId GetCardId() {
            return new CreatureCardId(cardId);
        }
        public RowType GetRow() {
            return (RowType)Enum.Parse(typeof(RowType), row);
        }
        public static GameSetupApiPlayCardRequest Create(CreatureCardId cardId, RowType row) {
            return new GameSetupApiPlayCardRequest(cardId.Value, row.ToString());
        }
    }

    public class GameSetupApiPlayCardResponse {
        public Game Value { get; }

        public GameSetupApiPlayCardResponse(
            Game value
        ) {
            Value = value;
        }
    }

    public class GameSetupApiMoveCardRequest {
        readonly string cardId;
        readonly string from;
        readonly string to;

        public GameSetupApiMoveCardRequest(
            string cardId,
            string from,
            string to
        ) {
            this.cardId = cardId;
            this.from = from;
            this.to = to;
        }
        public CreatureCardId GetCardId() {
            return new CreatureCardId(cardId);
        }
        public RowType GetFrom() {
            return (RowType)Enum.Parse(typeof(RowType), from);
        }
        public RowType GetTo() {
            return (RowType)Enum.Parse(typeof(RowType), to);
        }
        public static GameSetupApiMoveCardRequest Create(CreatureCardId cardId, RowType from, RowType to) {
            return new GameSetupApiMoveCardRequest(cardId.Value, from.ToString(), to.ToString());
        }
    }

    public class GameSetupApiMoveCardResponse {
        public Game Value { get; }

        public GameSetupApiMoveCardResponse(
            Game value
        ) {
            Value = value;
        }
    }
}