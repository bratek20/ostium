// DO NOT EDIT! Autogenerated by HLA tool

using System.Collections.Generic;
using B20.Ext;
using GameComponents.Api;

namespace GameSetup.Api {
    public class Table {
        readonly GateDurabilityCard gateDurabilityCard;
        readonly CreatureCard? attackRow;
        readonly CreatureCard? defenseRow;
        readonly GateCard gateCard;

        public Table(
            GateDurabilityCard gateDurabilityCard,
            CreatureCard? attackRow,
            CreatureCard? defenseRow,
            GateCard gateCard
        ) {
            this.gateDurabilityCard = gateDurabilityCard;
            this.attackRow = attackRow;
            this.defenseRow = defenseRow;
            this.gateCard = gateCard;
        }
        public GateDurabilityCard GetGateDurabilityCard() {
            return gateDurabilityCard;
        }
        public Optional<CreatureCard> GetAttackRow() {
            return Optional<CreatureCard>.Of(attackRow);
        }
        public Optional<CreatureCard> GetDefenseRow() {
            return Optional<CreatureCard>.Of(defenseRow);
        }
        public GateCard GetGateCard() {
            return gateCard;
        }
        public static Table Create(GateDurabilityCard gateDurabilityCard, Optional<CreatureCard> attackRow, Optional<CreatureCard> defenseRow, GateCard gateCard) {
            return new Table(gateDurabilityCard, attackRow.OrElse(null), defenseRow.OrElse(null), gateCard);
        }
    }

    public class Hand {
        readonly List<CreatureCard> cards;

        public Hand(
            List<CreatureCard> cards
        ) {
            this.cards = cards;
        }
        public List<CreatureCard> GetCards() {
            return cards;
        }
        public static Hand Create(List<CreatureCard> cards) {
            return new Hand(cards);
        }
    }

    public class Game {
        readonly Table table;
        readonly Hand hand;

        public Game(
            Table table,
            Hand hand
        ) {
            this.table = table;
            this.hand = hand;
        }
        public Table GetTable() {
            return table;
        }
        public Hand GetHand() {
            return hand;
        }
        public static Game Create(Table table, Hand hand) {
            return new Game(table, hand);
        }
    }
}