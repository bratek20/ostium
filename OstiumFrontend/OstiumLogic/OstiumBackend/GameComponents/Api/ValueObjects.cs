// DO NOT EDIT! Autogenerated by HLA tool

using System.Collections.Generic;
using B20.Ext;

namespace GameComponents.Api {
    public class GateDurabilityMarker {
        public int Value { get; }

        public GateDurabilityMarker(
            int value
        ) {
            Value = value;
        }

        public override bool Equals(object? obj) {
            if (ReferenceEquals(null, obj)) return false;
            if (ReferenceEquals(this, obj)) return true;
            if (obj.GetType() != this.GetType()) return false;
            return Value == ((GateDurabilityMarker)obj).Value;
        }

        public override int GetHashCode() {
            return Value.GetHashCode();
        }
    }

    public class CreatureCardId {
        public string Value { get; }

        public CreatureCardId(
            string value
        ) {
            Value = value;
        }

        public override bool Equals(object? obj) {
            if (ReferenceEquals(null, obj)) return false;
            if (ReferenceEquals(this, obj)) return true;
            if (obj.GetType() != this.GetType()) return false;
            return Value == ((CreatureCardId)obj).Value;
        }

        public override int GetHashCode() {
            return Value.GetHashCode();
        }
    }

    public class CreatureCard {
        readonly string id;

        public CreatureCard(
            string id
        ) {
            this.id = id;
        }
        public CreatureCardId GetId() {
            return new CreatureCardId(id);
        }
        public static CreatureCard Create(CreatureCardId id) {
            return new CreatureCard(id.Value);
        }
    }

    public class GateCard {
        readonly bool destroyed;

        public GateCard(
            bool destroyed
        ) {
            this.destroyed = destroyed;
        }
        public bool GetDestroyed() {
            return destroyed;
        }
        public static GateCard Create(bool destroyed) {
            return new GateCard(destroyed);
        }
    }

    public class GateDurabilityCard {
        readonly int myMarker;
        readonly int opponentMarker;

        public GateDurabilityCard(
            int myMarker,
            int opponentMarker
        ) {
            this.myMarker = myMarker;
            this.opponentMarker = opponentMarker;
        }
        public GateDurabilityMarker GetMyMarker() {
            return new GateDurabilityMarker(myMarker);
        }
        public GateDurabilityMarker GetOpponentMarker() {
            return new GateDurabilityMarker(opponentMarker);
        }
        public static GateDurabilityCard Create(GateDurabilityMarker myMarker, GateDurabilityMarker opponentMarker) {
            return new GateDurabilityCard(myMarker.Value, opponentMarker.Value);
        }
    }
}