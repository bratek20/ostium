// DO NOT EDIT! Autogenerated by HLA tool

package com.github.bratek20.ostium.kaijugame.web

import com.github.bratek20.architecture.serialization.api.Serializer
import com.github.bratek20.architecture.serialization.api.Struct
import com.github.bratek20.architecture.serialization.context.SerializationFactory

import org.springframework.web.bind.annotation.PostMapping
import org.springframework.web.bind.annotation.RequestBody
import org.springframework.web.bind.annotation.RequestMapping
import org.springframework.web.bind.annotation.RestController

import com.github.bratek20.ostium.kaijugame.api.*

@RestController
@RequestMapping("/ostium/gameApi")
class GameApiController(
    private val api: GameApi,
) {
    private val serializer: Serializer = SerializationFactory.createSerializer()

    @PostMapping("/getState")
    fun getState(@RequestBody rawRequest: Struct): Struct {
        val request = serializer.fromStruct(rawRequest, GameApiGetStateRequest::class.java)
        return serializer.asStruct(GameApiGetStateResponse(api.getState(request.getToken())))
    }

    @PostMapping("/endPhase")
    fun endPhase(@RequestBody rawRequest: Struct): Struct {
        val request = serializer.fromStruct(rawRequest, GameApiEndPhaseRequest::class.java)
        return serializer.asStruct(GameApiEndPhaseResponse(api.endPhase(request.getToken())))
    }

    @PostMapping("/playCard")
    fun playCard(@RequestBody rawRequest: Struct): Struct {
        val request = serializer.fromStruct(rawRequest, GameApiPlayCardRequest::class.java)
        return serializer.asStruct(GameApiPlayCardResponse(api.playCard(request.getToken(), request.getHandCardIdx())))
    }

    @PostMapping("/assignDamage")
    fun assignDamage(@RequestBody rawRequest: Struct): Struct {
        val request = serializer.fromStruct(rawRequest, GameApiAssignDamageRequest::class.java)
        return serializer.asStruct(GameApiAssignDamageResponse(api.assignDamage(request.getToken(), request.getZone(), request.getDamageType())))
    }

    @PostMapping("/assignGuard")
    fun assignGuard(@RequestBody rawRequest: Struct): Struct {
        val request = serializer.fromStruct(rawRequest, GameApiAssignGuardRequest::class.java)
        return serializer.asStruct(GameApiAssignGuardResponse(api.assignGuard(request.getToken(), request.getZone(), request.getDamageType())))
    }
}

