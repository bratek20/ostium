// DO NOT EDIT! Autogenerated by HLA tool

package com.github.bratek20.ostium.kaijugame.web

import com.github.bratek20.infrastructure.httpclient.api.HttpClientConfig

import com.github.bratek20.ostium.kaijugame.api.*

import com.github.bratek20.ostium.gamesmanagement.api.*

class KaijuGameWebClientConfig(
    val value: HttpClientConfig
) {
}
class GameApiGetStateRequest(
    private val token: GameToken
) {
    fun getToken(): GameToken {
        return token
    }
    companion object {
        fun create(token: GameToken): GameApiGetStateRequest {
            return GameApiGetStateRequest(token)
        }
    }
}
class GameApiGetStateResponse(
    private val value: GameState
) {
    fun getValue(): GameState {
        return value
    }
}
class GameApiEndPhaseRequest(
    private val token: GameToken
) {
    fun getToken(): GameToken {
        return token
    }
    companion object {
        fun create(token: GameToken): GameApiEndPhaseRequest {
            return GameApiEndPhaseRequest(token)
        }
    }
}
class GameApiEndPhaseResponse(
    private val value: GameState
) {
    fun getValue(): GameState {
        return value
    }
}
class GameApiPlayCardRequest(
    private val token: GameToken,
    private val handCardIdx: Int
) {
    fun getToken(): GameToken {
        return token
    }
    fun getHandCardIdx(): Int {
        return handCardIdx
    }
    companion object {
        fun create(token: GameToken, handCardIdx: Int): GameApiPlayCardRequest {
            return GameApiPlayCardRequest(token, handCardIdx)
        }
    }
}
class GameApiPlayCardResponse(
    private val value: GameState
) {
    fun getValue(): GameState {
        return value
    }
}
class GameApiAssignDamageRequest(
    private val token: GameToken,
    private val zone: String,
    private val damageType: String
) {
    fun getToken(): GameToken {
        return token
    }
    fun getZone(): HitZonePosition {
        return HitZonePosition.valueOf(zone)
    }
    fun getDamageType(): DamageType {
        return DamageType.valueOf(damageType)
    }
    companion object {
        fun create(token: GameToken, zone: HitZonePosition, damageType: DamageType): GameApiAssignDamageRequest {
            return GameApiAssignDamageRequest(token, zone.name, damageType.name)
        }
    }
}
class GameApiAssignDamageResponse(
    private val value: GameState
) {
    fun getValue(): GameState {
        return value
    }
}
class GameApiAssignGuardRequest(
    private val token: GameToken,
    private val zone: String,
    private val damageType: String
) {
    fun getToken(): GameToken {
        return token
    }
    fun getZone(): HitZonePosition {
        return HitZonePosition.valueOf(zone)
    }
    fun getDamageType(): DamageType {
        return DamageType.valueOf(damageType)
    }
    companion object {
        fun create(token: GameToken, zone: HitZonePosition, damageType: DamageType): GameApiAssignGuardRequest {
            return GameApiAssignGuardRequest(token, zone.name, damageType.name)
        }
    }
}
class GameApiAssignGuardResponse(
    private val value: GameState
) {
    fun getValue(): GameState {
        return value
    }
}