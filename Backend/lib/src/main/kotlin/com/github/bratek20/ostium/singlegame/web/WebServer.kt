// DO NOT EDIT! Autogenerated by HLA tool

package com.github.bratek20.ostium.singlegame.web

import com.github.bratek20.architecture.serialization.api.Serializer
import com.github.bratek20.architecture.serialization.api.Struct
import com.github.bratek20.architecture.serialization.context.SerializationFactory

import org.springframework.web.bind.annotation.PostMapping
import org.springframework.web.bind.annotation.RequestBody
import org.springframework.web.bind.annotation.RequestMapping
import org.springframework.web.bind.annotation.RestController

import com.github.bratek20.ostium.singlegame.api.*

@RestController
@RequestMapping("/gameApi")
class GameApiController(
    private val api: GameApi,
) {
    private val serializer: Serializer = SerializationFactory.createSerializer()

    @PostMapping("/startGame")
    fun startGame(): Struct {
        // no request needed
        return serializer.asStruct(GameApiStartGameResponse(api.startGame()))
    }

    @PostMapping("/playCard")
    fun playCard(@RequestBody rawRequest: Struct): Struct {
        val request = serializer.fromStruct(rawRequest, GameApiPlayCardRequest::class.java)
        return serializer.asStruct(GameApiPlayCardResponse(api.playCard(request.getCardId(), request.getRow())))
    }

    @PostMapping("/moveCard")
    fun moveCard(@RequestBody rawRequest: Struct): Struct {
        val request = serializer.fromStruct(rawRequest, GameApiMoveCardRequest::class.java)
        return serializer.asStruct(GameApiMoveCardResponse(api.moveCard(request.getCardId(), request.getFrom(), request.getTo())))
    }
}

